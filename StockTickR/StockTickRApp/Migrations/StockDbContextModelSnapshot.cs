// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StockTickR.Repositories;

namespace StockTickR.Migrations
{
    [DbContext(typeof(StockDbContext))]
    partial class StockDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("StockTickR.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("DayHigh");

                    b.Property<decimal>("DayLow");

                    b.Property<decimal>("DayOpen");

                    b.Property<decimal>("LastChange");

                    b.Property<decimal>("Price");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("Stocks");

                    b.HasData(
                        new { Id = 1, DayHigh = 75.12m, DayLow = 75.12m, DayOpen = 75.12m, LastChange = 0m, Price = 75.12m, Symbol = "MSFT" },
                        new { Id = 2, DayHigh = 158.44m, DayLow = 158.44m, DayOpen = 158.44m, LastChange = 0m, Price = 158.44m, Symbol = "AAPL" },
                        new { Id = 3, DayHigh = 1200.96m, DayLow = 1200.96m, DayOpen = 1200.96m, LastChange = 0m, Price = 1200.96m, Symbol = "GOOG" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
